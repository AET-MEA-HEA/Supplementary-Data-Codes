function basis = nn_basis(type)
if(type==1)
    %     N_grid_pts = 7;
    basis = [ ...
        0,0,0  ;...
        1,0,0  ;...
        -1,0,0 ;...
        0,1,0  ;...
        0,-1,0 ;...
        0,0,1  ;...
        0,0,-1 ;...
        ];
elseif(type==2)
    d = 1/sqrt(3);
    basis = [ ...
        0,0,0  ;...
        d,d,d  ;...
        -d,d,d ;...
        d,-d,d ;...
        d,d,-d ;...
        -d,-d,d ;...
        -d,d,-d ;...
        d,-d,-d ;...
        -d,-d,-d ;...
        ];
elseif(type==3)
    d = 1/sqrt(2);
    basis = [ ...
        0,0,0    ;...
        d,d,0    ;...
        -d,d,0   ;...
        d,-d,0   ;...
        -d,-d,0  ;...
        d,0,d    ;...
        -d,0,d   ;...
        d,0,-d   ;...
        -d,0,-d  ;...
        0,d,d    ;...
        0,-d,d   ;...
        0,d,-d   ;...
        0,-d,-d  ;...
        ];
elseif(type==4)
    basis = [ ...
        0,0,0                           ;...
        1/2,1/(2*sqrt(3)),sqrt(2/3)     ;...
        -1/2,1/(2*sqrt(3)),sqrt(2/3)    ;...
        0,-1/sqrt(3),sqrt(2/3)          ;...
        1/2,1/(2*sqrt(3)),-sqrt(2/3)    ;...
        -1/2,1/(2*sqrt(3)),-sqrt(2/3)   ;...
        0,-1/sqrt(3),-sqrt(2/3)         ;...
        1,0,0                           ;...
        1/2,sqrt(3)/2,0                 ;...
        -1/2,sqrt(3)/2,0                ;...
        -1,0,0                          ;...
        -1/2,-sqrt(3)/2,0               ;...
        1/2,-sqrt(3)/2,0                ;...
        ];
elseif(type==5)
    phi = (1+sqrt(5))/2;
    den = sqrt(1+phi*phi);
    basis = [ ...
        0,0,0       ;...
        0,1,phi     ;...
        0,-1,phi    ;...
        0,1,-phi    ;...
        0,-1,-phi   ;...
        1,phi,0     ;...
        -1,phi,0    ;...
        1,-phi,0    ;...
        -1,-phi,0   ;...
        phi,0,1     ;...
        -phi,0,1    ;...
        phi,0,-1    ;...
        -phi,0,-1   ;...
        ]/den;
elseif type == 41
    basis = [ ...
        0,      0,              0             ;...
        1,      0,              0             ;...
        1/2,    sqrt(3)/2,      0             ;...
        -1/2,   sqrt(3)/2,      0             ;...
        -1,     0,              0             ;...
        -1/2,  -sqrt(3)/2,      0             ;...
        1/2,   -sqrt(3)/2,      0             ;...
        1/2,    1/(2*sqrt(3)),  sqrt(2/3)     ;...
        -1/2,   1/(2*sqrt(3)),  sqrt(2/3)     ;...
        0,     -1/sqrt(3),      sqrt(2/3)     ;...
        1/2,    1/(2*sqrt(3)), -sqrt(2/3)     ;...
        -1/2,   1/(2*sqrt(3)), -sqrt(2/3)     ;...
        0,     -1/sqrt(3),     -sqrt(2/3)     ;...
        0,      0,              2*sqrt(2/3)   ;...
        0,      0,             -2*sqrt(2/3)   ;...
        ];
elseif type == 42
    basis = [ ...
        0,0,0                           ;...
        1,0,0                           ;...
        1/2,sqrt(3)/2,0                 ;...
        -1/2,sqrt(3)/2,0                ;...
        -1,0,0                          ;...
        -1/2,-sqrt(3)/2,0               ;...
        1/2,-sqrt(3)/2,0                ;...
        1/(2*sqrt(3)),1/2,sqrt(2/3)     ;...
        1/(2*sqrt(3)),-1/2,sqrt(2/3)    ;...
        -1/sqrt(3),0,sqrt(2/3)          ;...
        1/(2*sqrt(3)),1/2,-sqrt(2/3)    ;...
        1/(2*sqrt(3)),-1/2,-sqrt(2/3)   ;...
        -1/sqrt(3),0,-sqrt(2/3)         ;...
        0,0,2*sqrt(2/3);...
        0,0,-2*sqrt(2/3);...
        ];
else
    basis = [];
end
end